# OASIS_START
# DO NOT EDIT (digest: 8d02e1fb9dc6d05eb90586c5b4383058)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library sxclient
"src/sxclient/sxclient.cmxs": use_sxclient
<src/sxclient/*.ml{,i}>: package(cryptokit)
<src/sxclient/*.ml{,i}>: package(equeue-ssl)
<src/sxclient/*.ml{,i}>: package(jsonm)
<src/sxclient/*.ml{,i}>: package(netclient)
<src/sxclient/*.ml{,i}>: package(netstring)
<src/sxclient/*.ml{,i}>: package(ssl)
<src/sxclient/*.ml{,i}>: package(threads)
# Library sxclient.lwt
"src/sxclient/lwt/sxclient.lwt.cmxs": use_sxclient.lwt
<src/sxclient/lwt/*.ml{,i}>: package(cryptokit)
<src/sxclient/lwt/*.ml{,i}>: package(equeue-ssl)
<src/sxclient/lwt/*.ml{,i}>: package(jsonm)
<src/sxclient/lwt/*.ml{,i}>: package(lwt.unix)
<src/sxclient/lwt/*.ml{,i}>: package(netclient)
<src/sxclient/lwt/*.ml{,i}>: package(netstring)
<src/sxclient/lwt/*.ml{,i}>: package(ssl)
<src/sxclient/lwt/*.ml{,i}>: package(threads)
<src/sxclient/lwt/*.ml{,i}>: use_sxclient
# Library sxclient.thread
"src/sxclient/thread/sxclient.thread.cmxs": use_sxclient.thread
<src/sxclient/thread/*.ml{,i}>: package(cryptokit)
<src/sxclient/thread/*.ml{,i}>: package(equeue-ssl)
<src/sxclient/thread/*.ml{,i}>: package(jsonm)
<src/sxclient/thread/*.ml{,i}>: package(netclient)
<src/sxclient/thread/*.ml{,i}>: package(netstring)
<src/sxclient/thread/*.ml{,i}>: package(ssl)
<src/sxclient/thread/*.ml{,i}>: package(threads)
<src/sxclient/thread/*.ml{,i}>: use_sxclient
# Executable sxuls
<test/sxuls.{native,byte}>: package(cryptokit)
<test/sxuls.{native,byte}>: package(equeue-ssl)
<test/sxuls.{native,byte}>: package(jsonm)
<test/sxuls.{native,byte}>: package(netclient)
<test/sxuls.{native,byte}>: package(netstring)
<test/sxuls.{native,byte}>: package(ssl)
<test/sxuls.{native,byte}>: package(threads)
<test/sxuls.{native,byte}>: use_sxclient
<test/sxuls.{native,byte}>: use_sxclient.thread
# Executable sxucp
<test/sxucp.{native,byte}>: package(cryptokit)
<test/sxucp.{native,byte}>: package(equeue-ssl)
<test/sxucp.{native,byte}>: package(jsonm)
<test/sxucp.{native,byte}>: package(netclient)
<test/sxucp.{native,byte}>: package(netstring)
<test/sxucp.{native,byte}>: package(ssl)
<test/sxucp.{native,byte}>: package(threads)
<test/sxucp.{native,byte}>: use_sxclient
<test/sxucp.{native,byte}>: use_sxclient.thread
# Library server
"src/server/server.cmxs": use_server
<src/server/*.ml{,i}>: package(netsys)
<src/server/*.ml{,i}>: package(ocsigenserver)
<src/server/*.ml{,i}>: package(str)
<src/server/*.ml{,i}>: package(xmlm)
# Executable libres3_fcgi
<src/fcgi/libres3_fcgi.{native,byte}>: package(cryptokit)
<src/fcgi/libres3_fcgi.{native,byte}>: package(equeue-ssl)
<src/fcgi/libres3_fcgi.{native,byte}>: package(ipaddr)
<src/fcgi/libres3_fcgi.{native,byte}>: package(jsonm)
<src/fcgi/libres3_fcgi.{native,byte}>: package(netcgi2)
<src/fcgi/libres3_fcgi.{native,byte}>: package(netclient)
<src/fcgi/libres3_fcgi.{native,byte}>: package(netstring)
<src/fcgi/libres3_fcgi.{native,byte}>: package(netsys)
<src/fcgi/libres3_fcgi.{native,byte}>: package(ocsigenserver)
<src/fcgi/libres3_fcgi.{native,byte}>: package(ssl)
<src/fcgi/libres3_fcgi.{native,byte}>: package(str)
<src/fcgi/libres3_fcgi.{native,byte}>: package(threads)
<src/fcgi/libres3_fcgi.{native,byte}>: package(xmlm)
<src/fcgi/libres3_fcgi.{native,byte}>: use_server
<src/fcgi/libres3_fcgi.{native,byte}>: use_sxclient
<src/fcgi/libres3_fcgi.{native,byte}>: use_sxclient.thread
<src/*.ml{,i}>: package(cryptokit)
<src/*.ml{,i}>: package(equeue-ssl)
<src/*.ml{,i}>: package(ipaddr)
<src/*.ml{,i}>: package(jsonm)
<src/*.ml{,i}>: package(netcgi2)
<src/*.ml{,i}>: package(netclient)
<src/*.ml{,i}>: package(netstring)
<src/*.ml{,i}>: package(netsys)
<src/*.ml{,i}>: package(ocsigenserver)
<src/*.ml{,i}>: package(ssl)
<src/*.ml{,i}>: package(str)
<src/*.ml{,i}>: package(threads)
<src/*.ml{,i}>: package(xmlm)
<src/*.ml{,i}>: use_server
<src/*.ml{,i}>: use_sxclient
<src/*.ml{,i}>: use_sxclient.thread
<src/fcgi/*.ml{,i}>: package(cryptokit)
<src/fcgi/*.ml{,i}>: package(equeue-ssl)
<src/fcgi/*.ml{,i}>: package(ipaddr)
<src/fcgi/*.ml{,i}>: package(jsonm)
<src/fcgi/*.ml{,i}>: package(netcgi2)
<src/fcgi/*.ml{,i}>: package(netclient)
<src/fcgi/*.ml{,i}>: package(netstring)
<src/fcgi/*.ml{,i}>: package(netsys)
<src/fcgi/*.ml{,i}>: package(ocsigenserver)
<src/fcgi/*.ml{,i}>: package(ssl)
<src/fcgi/*.ml{,i}>: package(str)
<src/fcgi/*.ml{,i}>: package(threads)
<src/fcgi/*.ml{,i}>: package(xmlm)
<src/fcgi/*.ml{,i}>: use_server
<src/fcgi/*.ml{,i}>: use_sxclient
<src/fcgi/*.ml{,i}>: use_sxclient.thread
# Library libres3_site
"src/ocsigen/libres3_site.cmxs": use_libres3_site
# Executable libres3_ocsigen
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(cryptokit)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(dns.lwt)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(equeue-ssl)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(ipaddr)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(jsonm)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(lwt.unix)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(netcgi2)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(netclient)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(netstring)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(netsys)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(ocsigenserver)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(ssl)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(str)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(threads)
<src/ocsigen/libres3_ocsigen.{native,byte}>: package(xmlm)
<src/ocsigen/libres3_ocsigen.{native,byte}>: use_libres3_site
<src/ocsigen/libres3_ocsigen.{native,byte}>: use_server
<src/ocsigen/libres3_ocsigen.{native,byte}>: use_sxclient
<src/ocsigen/libres3_ocsigen.{native,byte}>: use_sxclient.lwt
<src/ocsigen/*.ml{,i}>: package(cryptokit)
<src/ocsigen/*.ml{,i}>: package(dns.lwt)
<src/ocsigen/*.ml{,i}>: package(equeue-ssl)
<src/ocsigen/*.ml{,i}>: package(ipaddr)
<src/ocsigen/*.ml{,i}>: package(jsonm)
<src/ocsigen/*.ml{,i}>: package(lwt.unix)
<src/ocsigen/*.ml{,i}>: package(netcgi2)
<src/ocsigen/*.ml{,i}>: package(netclient)
<src/ocsigen/*.ml{,i}>: package(netstring)
<src/ocsigen/*.ml{,i}>: package(netsys)
<src/ocsigen/*.ml{,i}>: package(ocsigenserver)
<src/ocsigen/*.ml{,i}>: package(ssl)
<src/ocsigen/*.ml{,i}>: package(str)
<src/ocsigen/*.ml{,i}>: package(threads)
<src/ocsigen/*.ml{,i}>: package(xmlm)
<src/ocsigen/*.ml{,i}>: use_libres3_site
<src/ocsigen/*.ml{,i}>: use_server
<src/ocsigen/*.ml{,i}>: use_sxclient
<src/ocsigen/*.ml{,i}>: use_sxclient.lwt
# Executable libres3_setup
<src/ocsigen/libres3_setup.{native,byte}>: package(unix)
<src/ocsigen/*.ml{,i}>: package(unix)
# Executable libres3_report
<src/server/libres3_report.{native,byte}>: package(cryptokit)
<src/server/libres3_report.{native,byte}>: package(equeue-ssl)
<src/server/libres3_report.{native,byte}>: package(ipaddr)
<src/server/libres3_report.{native,byte}>: package(jsonm)
<src/server/libres3_report.{native,byte}>: package(lwt.unix)
<src/server/libres3_report.{native,byte}>: package(netclient)
<src/server/libres3_report.{native,byte}>: package(netstring)
<src/server/libres3_report.{native,byte}>: package(ssl)
<src/server/libres3_report.{native,byte}>: package(threads)
<src/server/libres3_report.{native,byte}>: package(unix)
<src/server/libres3_report.{native,byte}>: use_sxclient
<src/server/libres3_report.{native,byte}>: use_sxclient.lwt
<src/server/*.ml{,i}>: package(cryptokit)
<src/server/*.ml{,i}>: package(equeue-ssl)
<src/server/*.ml{,i}>: package(ipaddr)
<src/server/*.ml{,i}>: package(jsonm)
<src/server/*.ml{,i}>: package(lwt.unix)
<src/server/*.ml{,i}>: package(netclient)
<src/server/*.ml{,i}>: package(netstring)
<src/server/*.ml{,i}>: package(ssl)
<src/server/*.ml{,i}>: package(threads)
<src/server/*.ml{,i}>: package(unix)
<src/server/*.ml{,i}>: use_sxclient
<src/server/*.ml{,i}>: use_sxclient.lwt
# Executable server_test
<test/test_server.{native,byte}>: package(cryptokit)
<test/test_server.{native,byte}>: package(equeue-ssl)
<test/test_server.{native,byte}>: package(ipaddr)
<test/test_server.{native,byte}>: package(jsonm)
<test/test_server.{native,byte}>: package(netcgi2)
<test/test_server.{native,byte}>: package(netclient)
<test/test_server.{native,byte}>: package(netstring)
<test/test_server.{native,byte}>: package(netsys)
<test/test_server.{native,byte}>: package(oUnit)
<test/test_server.{native,byte}>: package(ocsigenserver)
<test/test_server.{native,byte}>: package(ssl)
<test/test_server.{native,byte}>: package(str)
<test/test_server.{native,byte}>: package(threads)
<test/test_server.{native,byte}>: package(xmlm)
<test/test_server.{native,byte}>: use_server
<test/test_server.{native,byte}>: use_sxclient
<test/test_server.{native,byte}>: use_sxclient.thread
<test/*.ml{,i}>: package(netcgi2)
# Executable directio_test
<test/test_directio.{native,byte}>: package(cryptokit)
<test/test_directio.{native,byte}>: package(equeue-ssl)
<test/test_directio.{native,byte}>: package(ipaddr)
<test/test_directio.{native,byte}>: package(jsonm)
<test/test_directio.{native,byte}>: package(netclient)
<test/test_directio.{native,byte}>: package(netstring)
<test/test_directio.{native,byte}>: package(netsys)
<test/test_directio.{native,byte}>: package(oUnit)
<test/test_directio.{native,byte}>: package(ocsigenserver)
<test/test_directio.{native,byte}>: package(ssl)
<test/test_directio.{native,byte}>: package(str)
<test/test_directio.{native,byte}>: package(threads)
<test/test_directio.{native,byte}>: package(xmlm)
<test/test_directio.{native,byte}>: use_server
<test/test_directio.{native,byte}>: use_sxclient
<test/test_directio.{native,byte}>: use_sxclient.thread
<test/*.ml{,i}>: use_sxclient.thread
# Executable lwtio_test
<test/test_lwtio.{native,byte}>: package(cryptokit)
<test/test_lwtio.{native,byte}>: package(equeue-ssl)
<test/test_lwtio.{native,byte}>: package(ipaddr)
<test/test_lwtio.{native,byte}>: package(jsonm)
<test/test_lwtio.{native,byte}>: package(lwt.unix)
<test/test_lwtio.{native,byte}>: package(netclient)
<test/test_lwtio.{native,byte}>: package(netstring)
<test/test_lwtio.{native,byte}>: package(netsys)
<test/test_lwtio.{native,byte}>: package(oUnit)
<test/test_lwtio.{native,byte}>: package(ocsigenserver)
<test/test_lwtio.{native,byte}>: package(ssl)
<test/test_lwtio.{native,byte}>: package(str)
<test/test_lwtio.{native,byte}>: package(threads)
<test/test_lwtio.{native,byte}>: package(xmlm)
<test/test_lwtio.{native,byte}>: use_server
<test/test_lwtio.{native,byte}>: use_sxclient
<test/test_lwtio.{native,byte}>: use_sxclient.lwt
<test/*.ml{,i}>: package(lwt.unix)
<test/*.ml{,i}>: use_sxclient.lwt
# Executable misc_test
<test/test_misc.{native,byte}>: package(cryptokit)
<test/test_misc.{native,byte}>: package(equeue-ssl)
<test/test_misc.{native,byte}>: package(ipaddr)
<test/test_misc.{native,byte}>: package(jsonm)
<test/test_misc.{native,byte}>: package(netclient)
<test/test_misc.{native,byte}>: package(netstring)
<test/test_misc.{native,byte}>: package(netsys)
<test/test_misc.{native,byte}>: package(oUnit)
<test/test_misc.{native,byte}>: package(ocsigenserver)
<test/test_misc.{native,byte}>: package(ssl)
<test/test_misc.{native,byte}>: package(str)
<test/test_misc.{native,byte}>: package(threads)
<test/test_misc.{native,byte}>: package(xmlm)
<test/test_misc.{native,byte}>: use_server
<test/test_misc.{native,byte}>: use_sxclient
# Executable net_test
<test/netTest.{native,byte}>: package(cryptokit)
<test/netTest.{native,byte}>: package(equeue-ssl)
<test/netTest.{native,byte}>: package(ipaddr)
<test/netTest.{native,byte}>: package(jsonm)
<test/netTest.{native,byte}>: package(netclient)
<test/netTest.{native,byte}>: package(netstring)
<test/netTest.{native,byte}>: package(netsys)
<test/netTest.{native,byte}>: package(oUnit)
<test/netTest.{native,byte}>: package(ocsigenserver)
<test/netTest.{native,byte}>: package(ssl)
<test/netTest.{native,byte}>: package(str)
<test/netTest.{native,byte}>: package(threads)
<test/netTest.{native,byte}>: package(xmlm)
<test/netTest.{native,byte}>: use_server
<test/netTest.{native,byte}>: use_sxclient
<test/*.ml{,i}>: package(cryptokit)
<test/*.ml{,i}>: package(equeue-ssl)
<test/*.ml{,i}>: package(ipaddr)
<test/*.ml{,i}>: package(jsonm)
<test/*.ml{,i}>: package(netclient)
<test/*.ml{,i}>: package(netstring)
<test/*.ml{,i}>: package(netsys)
<test/*.ml{,i}>: package(oUnit)
<test/*.ml{,i}>: package(ocsigenserver)
<test/*.ml{,i}>: package(ssl)
<test/*.ml{,i}>: package(str)
<test/*.ml{,i}>: package(threads)
<test/*.ml{,i}>: package(xmlm)
<test/*.ml{,i}>: use_server
<test/*.ml{,i}>: use_sxclient
# OASIS_STOP
<src/ocsigen/libres3_ocsigen.{native,byte}>: link_ocsigen
<**/*.ml{,i}>: warn_A, warn_error_S,warn_error_U, annot, strict_sequence
